@prefix ex: <http://www.example.com/>.
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix carml: <http://carml.taxonic.com/carml/> .
@prefix : <http://www.example.com/mapping/> .
@prefix lit: <http://www.example.com/lit/> .

:books
  rml:logicalSource [
    rml:source "authorsWithBooks.json" ;
    rml:referenceFormulation ql:JSONPath ;
    rml:iterator "$.authors[*].books[*]" ;
  ];
  rr:subjectMap [
    rr:template "http://www.example.com/book/{id}" ;
    rr:class lit:Book ;
  ];
  rr:predicateObjectMap [
    rr:predicate dct:identifier ;
    rr:objectMap [
      rml:reference "id" ;
    ]
  ];
  rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [
      rml:reference "title" ;
    ]
  ];
  rr:predicateObjectMap [
    rr:predicate lit:author;
    rr:objectMap [
      rr:parentTriplesMap :authors;
      rr:joinCondition [
        rr:parent "$.books[*].id";
        rr:child "id";
      ];
    ];
  ];
.

:authors
  rml:logicalSource [
    rml:source "authorsWithBooks.json" ;
    rml:referenceFormulation ql:JSONPath ;
    rml:iterator "$.authors[*]" ;
  ];
  rr:subjectMap [
    rr:template "http://www.example.com/author/{name}" ;
    rr:class lit:Author;
  ];
  rr:predicateObjectMap [
    rr:predicate foaf:name;
    rr:objectMap [
      rml:reference "name";
    ]
  ];
.
